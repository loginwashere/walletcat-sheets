{"version":3,"sources":["app/index.ts","constants/index.ts","actions/index.ts","api/index.ts","config/index.ts","components/Header/index.tsx","containers/Header/index.tsx","components/AccountList/index.tsx","pages/AccountListPage/index.tsx","containers/AccountListPage/index.tsx","components/Select/index.tsx","components/AccountForm/Form.tsx","validation/index.ts","components/AccountForm/index.tsx","pages/AccountNewPage/index.tsx","containers/AccountNewPage/index.tsx","pages/AccountViewPage/index.tsx","containers/AccountViewPage/index.tsx","components/CurrencyList/index.tsx","pages/CurrencyListPage/index.tsx","containers/CurrencyListPage/index.tsx","components/CurrencyForm/Form.tsx","components/CurrencyForm/index.tsx","pages/CurrencyNewPage/index.tsx","containers/CurrencyNewPage/index.tsx","pages/CurrencyViewPage/index.tsx","containers/CurrencyViewPage/index.tsx","components/CategoryList/index.tsx","pages/CategoryListPage/index.tsx","containers/CategoryListPage/index.tsx","components/CategoryForm/Form.tsx","components/CategoryForm/index.tsx","pages/CategoryNewPage/index.tsx","containers/CategoryNewPage/index.tsx","pages/CategoryViewPage/index.tsx","containers/CategoryViewPage/index.tsx","components/TransactionList/index.tsx","pages/TransactionListPage/index.tsx","containers/TransactionListPage/index.tsx","components/TransactionForm/Form.tsx","components/TransactionForm/index.tsx","pages/TransactionNewPage/index.tsx","containers/TransactionNewPage/index.tsx","pages/TransactionViewPage/index.tsx","containers/TransactionViewPage/index.tsx","components/SpreadsheetForm/Form.tsx","components/SpreadsheetForm/index.tsx","pages/SpreadsheetPage/index.tsx","containers/SpreadsheetPage/index.tsx","pages/ProfilePage/index.tsx","containers/ProfilePage/index.tsx","pages/NoMatchPage/index.tsx","containers/NoMatchPage/index.tsx","components/Root/index.tsx","reducers/initialState.ts","reducers/auth.ts","reducers/authClientLoad.ts","reducers/authClientInit.ts","reducers/data.ts","reducers/spreadsheetId.ts","store.ts","reducers/index.ts","serviceWorker.js","index.tsx"],"names":["ENTITY_TYPE","ENTITY_STATUS","ActionTypes","entityFields","_entityFields","Object","defineProperty","currency","category","account","transactionItem","transaction","entityStateKeys","_entityStateKeys","keys","values","sheetNames","_sheetNames","formatEntity","type","entity","console","log","map","field","generateId","index","concat","authClientLoadActions","createAsyncAction","AUTH_CLIENT_LOAD_REQUEST","AUTH_CLIENT_LOAD_SUCCESS","handleAuthClientLoad","dispatch","request","Promise","resolve","window","gapi","load","then","success","catch","failure","authChanged","createAction","AUTH_CHANGED","action","signedIn","authClientInitActions","AUTH_CLIENT_INIT_REQUEST","AUTH_CLIENT_INIT_SUCCESS","AUTH_CLIENT_INIT_FAILURE","handleAuthClientInit","clientId","process","client","init","discoveryDocs","scope","cb","auth","auth2","getAuthInstance","isSignedIn","listen","get","error","apiInit","getState","_getState","authClientLoad","authClientInit","loaded","loading","initiated","initiating","initLoadActions","INIT_LOAD_REQUEST","INIT_LOAD_SUCCESS","INIT_LOAD_FAILURE","initLoad","spreadsheetId","_ref","ranges","sheets","spreadsheets","batchGet","api","key","response","spreadhsheetChanged","SPREADSHEET_CHANGED","saveEntityActions","SAVE_ENTITY_REQUEST","SAVE_ENTITY_SUCCESS","SAVE_ENTITY_FAILURE","saveEntity","id","update","range","valueInputOption","objectSpread","updatedAt","Date","value","append","insertDataOption","createdAt","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","stop","this","_x","apply","arguments","signIn","SIGN_IN","signOut","SIGN_OUT","routes","profile","spreadsheet","accounts","list","new","view","currencies","categories","transactions","default","Header","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","open","setState","isDrawerOpen","state","onApiInit","_this2","_this$props","classes","data","sideList","react_default","createElement","className","core_List_default","NavLink","to","sideListItem","ListItem_default","button","ListItemIcon_default","Add_default","ListItemText_default","primary","List_default","Divider_default","onClick","e","preventDefault","onSignIn","ExitToApp_default","AccountCircle_default","onSignOut","PowerSettingsNew_default","container","AppBar_default","position","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","grow","brand","Button_default","disabled","padding","fontSize","processing","LinearProgress_default","progress","Drawer_default","onClose","tabIndex","role","onKeyDown","Component","withStyles","theme","textDecoration","display","alignItems","justifyContent","flexGrow","marginLeft","marginRight","width","textField","spacing","unit","fab","bottom","right","marginBottom","top","withTheme","Container","connect","onSpreadsheetIdChange","onInitLoad","AccountList","Fragment","component","accountIds","item","replace","dense","name","secondary","description","root","titlePrimary","titleSecondary","AccountListPage","Paper_default","elevation","components_AccountList","Link","Fab_default","mixins","gutters","paddingTop","paddingBottom","Select","options","label","onChange","placeholder","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","displayEmpty","select","MenuItem_default","option","Form","handleChange","event","setFieldTouched","persist","_this$props2","_this$props2$values","currencyId","errors","touched","isValid","handleSubmit","noValidate","autoComplete","onSubmit","TextField_default","helperText","Boolean","margin","components_Select","currencyIds","formControlControls","fullWidth","onGoBack","React","flexDirection","marginTop","minWidth","spreadsheetForm","Yup","required","transactionNewForm","categoryId","transactionItems","of","shape","amount","accountId","min","currencyNewForm","symbol","categoryNewForm","parentId","accountNewForm","AccountForm","actions","onEntitySave","setSubmitting","history","push","setErrors","setStatus","msg","handleGoBack","goBack","status","active","formik_esm","render","AccountForm_Form","assign","initialValues","validationSchema","AccountNewPage","components_AccountForm","payload","AccountViewPage","match","params","CurrencyList","CurrencyListPage","components_CurrencyList","CurrencyForm","sent","CurrencyForm_Form","CurrencyNewPage","components_CurrencyForm","CurrencyViewPage","CategoryList","categoryIds","CategoryListPage","components_CategoryList","CategoryForm","CategoryForm_Form","CategoryNewPage","components_CategoryForm","CategoryViewPage","TransactionList","transactionIds","transactionItemIds","filter","transactionItemId","transactionId","toAccount","toAccountCurrency","date","TransactionListPage","Redirect","components_TransactionList","TransactionListPageContainer","TransactionNewForm","handleDateChange","setFieldValue","handleFieldArrayChange","_this$props3","_this$props4","_this$props4$values","material_ui_pickers_esm","arrayHelpers","transactionItemsContainer","size","remove","Remove_default","TransactionForm","handleSave","_callee3","updatePromises","deletePromises","_context3","length","abrupt","_x3","all","indexOf","_ref3","_callee2","_context2","deleted","deletedAt","_x4","defaultTransactionItems","TransactionForm_Form","TransactionNewPage","components_TransactionForm","TransactionViewPage","SpreadsheetForm","onSpreadsheetChange","SpreadsheetForm_Form","SpreadsheetPage","handleChangeSpreadsheetId","components_SpreadsheetForm","ProfilePage","NoMatchPage","Root","store","es","integration_react","persistor","utils","DateFnsUtils","esm","containers_Header","Switch","Route","path","exact","initialState","reducers_auth","undefined","getType","reducers_authClientLoad","reducers_authClientInit","reducers_data","result","valueRanges","parsedValues","reduce","current","_objectSpread3","row","reducers_spreadsheetId","createHistory","basename","configureStore","preloadedState","persistConfig","storage","blacklist","persistedReducer","persistReducer","combineReducers","router","connectRouter","rootReducer","middlewares","routerMiddleware","thunk","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","persistStore","location","hostname","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bbfa374.chunk.js","sourcesContent":["export enum ENTITY_TYPE {\n  currency = 'currency',\n  category = 'category',\n  account = 'account',\n  transactionItem = 'transactionItem',\n  transaction = 'transaction',\n}\n\nexport type ENTITY_TYPES = ENTITY_TYPE.currency|ENTITY_TYPE.category|ENTITY_TYPE.account|ENTITY_TYPE.transactionItem|ENTITY_TYPE.transaction;\n\nexport enum ENTITY_STATUS {\n  active = 'active',\n  deleted = 'deleted',\n}\n\nexport interface ICurrency {\n  id?: string;\n  name: string;\n  symbol: string;\n  description?: string;\n  status: ENTITY_STATUS;\n  createdAt?: string|Date;\n  updatedAt?: string|Date;\n  deletedAt?: string|Date;\n  [key: string]: string|ENTITY_STATUS|Date|undefined;\n}\nexport interface ICategory {\n  id?: string;\n  name: string;\n  parentId?: string;\n  description?: string;\n  status: ENTITY_STATUS;\n  createdAt?: string|Date;\n  updatedAt?: string|Date;\n  deletedAt?: string|Date;\n  [key: string]: string|ENTITY_STATUS|Date|undefined;\n}\nexport interface IAccount {\n  id?: string;\n  name: string;\n  currencyId: string;\n  description?: string;\n  status: ENTITY_STATUS;\n  createdAt?: string|Date;\n  updatedAt?: string|Date;\n  deletedAt?: string|Date;\n  [key: string]: string|ENTITY_STATUS|Date|undefined;\n}\nexport interface ITransactionItem {\n  id?: string;\n  transactionId: string;\n  amount: number;\n  accountId: string;\n  description?: string;\n  status: ENTITY_STATUS;\n  createdAt?: string|Date;\n  updatedAt?: string|Date;\n  deletedAt?: string|Date;\n  [key: string]: string|ENTITY_STATUS|Date|undefined|number;\n}\nexport interface ITransaction {\n  id?: string;\n  categoryId: string;\n  description?: string;\n  date: string|Date;\n  status: ENTITY_STATUS;\n  createdAt?: string|Date;\n  updatedAt?: string|Date;\n  deletedAt?: string|Date;\n  [key: string]: string|ENTITY_STATUS|Date|undefined;\n}\n\nexport type Entity = ICurrency|ICategory|IAccount|ITransactionItem|ITransaction;\nexport type EntityKeys = keyof ICurrency|keyof ICategory|keyof IAccount|keyof ITransactionItem|keyof ITransaction;\n\nexport interface IEntityFields {\n  [key: string]: (keyof ICurrency)[]|(keyof ICategory)[]|(keyof IAccount)[]|(keyof ITransactionItem)[]|(keyof ITransaction)[];\n  [ENTITY_TYPE.currency]: (keyof ICurrency)[];\n  [ENTITY_TYPE.category]: (keyof ICategory)[];\n  [ENTITY_TYPE.account]: (keyof IAccount)[];\n  [ENTITY_TYPE.transactionItem]: (keyof ITransactionItem)[];\n  [ENTITY_TYPE.transaction]: (keyof ITransaction)[];\n}\n\nexport const entityFields: IEntityFields = {\n  [ENTITY_TYPE.currency]: [\n    'name',\n    'symbol',\n    'description',\n    'status',\n    'createdAt',\n    'updatedAt',\n    'deletedAt',\n  ],\n  [ENTITY_TYPE.category]: [\n    'name',\n    'description',\n    'parentId',\n    'status',\n    'createdAt',\n    'updatedAt',\n    'deletedAt',\n  ],\n  [ENTITY_TYPE.account]: [\n    'name',\n    'description',\n    'currencyId',\n    'status',\n    'createdAt',\n    'updatedAt',\n    'deletedAt',\n  ],\n  [ENTITY_TYPE.transactionItem]: [\n    'transactionId',\n    'amount',\n    'accountId',\n    'description',\n    'status',\n    'createdAt',\n    'updatedAt',\n    'deletedAt',\n  ],\n  [ENTITY_TYPE.transaction]: [\n    'categoryId',\n    'description',\n    'date',\n    'status',\n    'createdAt',\n    'updatedAt',\n    'deletedAt',\n  ],\n};\n\nexport interface IOneEntityStateKeys {\n  keys: string;\n  values: string;\n}\n\nexport interface IEntityStateKeys {\n  readonly [key: string]: IOneEntityStateKeys;\n}\n\nexport const entityStateKeys: IEntityStateKeys = {\n  [ENTITY_TYPE.currency]: {\n    keys: 'currencyIds',\n    values: 'currencies',\n  },\n  [ENTITY_TYPE.category]: {\n    keys: 'categoryIds',\n    values: 'categories',\n  },\n  [ENTITY_TYPE.account]: {\n    keys: 'accountIds',\n    values: 'accounts',\n  },\n  [ENTITY_TYPE.transactionItem]: {\n    keys: 'transactionItemIds',\n    values: 'transactionItems',\n  },\n  [ENTITY_TYPE.transaction]: {\n    keys: 'transactionIds',\n    values: 'transactions',\n  },\n}\n\nexport interface ISheetNames {\n  readonly [key: string]: string;\n}\n\nexport const sheetNames: ISheetNames = {\n  [ENTITY_TYPE.currency]: 'Currencies',\n  [ENTITY_TYPE.category]: 'Categories',\n  [ENTITY_TYPE.account]: 'Accounts',\n  [ENTITY_TYPE.transactionItem]: 'TransactionItems',\n  [ENTITY_TYPE.transaction]: 'Transactions',\n}\n\nexport const formatEntity = (type: ENTITY_TYPES, entity: Entity) => {\n  console.log('formatEntity', type, entity);\n  return entityFields[type]\n    .map((field: EntityKeys) => entity[field]);\n}\n\nexport const generateId = (type: ENTITY_TYPES, index: number): string => `${sheetNames[type]}!A${index + 2}`;\n\nexport const parseId = (id: string) => id.split('!A')[1];\n\nexport const parseEntity = (type: ENTITY_TYPES) => (row: string[], index: number): Entity => {\n  const entity: Entity = entityFields[type]\n    .reduce(\n      (result: Entity, current: EntityKeys, index: number) => ({\n        ...result,\n        [current]: row[index]\n      }),\n      {} as Entity\n    );\n  return {\n    ...entity,\n    id: generateId(type, index),\n  };\n};\n","export enum ActionTypes {\n  AUTH_CHANGED = '@@walletcat/AUTH_CHANGED',\n\n  AUTH_CLIENT_LOAD_REQUEST = '@@walletcat/AUTH_CLIENT_LOAD_REQUEST',\n  AUTH_CLIENT_LOAD_SUCCESS = '@@walletcat/AUTH_CLIENT_LOAD_SUCCESS',\n  AUTH_CLIENT_LOAD_FAILURE = '@@walletcat/AUTH_CLIENT_LOAD_FAILURE',\n\n  AUTH_CLIENT_INIT_REQUEST = '@@walletcat/AUTH_CLIENT_INIT_REQUEST',\n  AUTH_CLIENT_INIT_SUCCESS = '@@walletcat/AUTH_CLIENT_INIT_SUCCESS',\n  AUTH_CLIENT_INIT_FAILURE = '@@walletcat/AUTH_CLIENT_INIT_FAILURE',\n\n  INIT_LOAD_REQUEST = '@@walletcat/INIT_LOAD_REQUEST',\n  INIT_LOAD_SUCCESS = '@@walletcat/INIT_LOAD_SUCCESS',\n  INIT_LOAD_FAILURE = '@@walletcat/INIT_LOAD_FAILURE',\n\n  SPREADSHEET_CHANGED = '@@walletcat/SPREADSHEET_CHANGED',\n\n  SAVE_ENTITY_REQUEST = '@@walletcat/SAVE_ENTITY_REQUEST',\n  SAVE_ENTITY_SUCCESS = '@@walletcat/SAVE_ENTITY_SUCCESS',\n  SAVE_ENTITY_FAILURE = '@@walletcat/SAVE_ENTITY_FAILURE',\n\n  SIGN_IN = '@@walletcat/SIGN_IN',\n  SIGN_OUT = '@@walletcat/SIGN_OUT',\n}\n","import { createAsyncAction, ActionType, createAction, } from 'typesafe-actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport {\n  sheetNames,\n  formatEntity,\n  Entity,\n  ENTITY_TYPES,\n} from '../app';\nimport * as api from '../api';\nimport { ActionTypes } from '../constants';\nimport { IRootState } from '../reducers/initialState';\n\nexport const authClientLoadActions = createAsyncAction(\n  ActionTypes.AUTH_CLIENT_LOAD_REQUEST,\n  ActionTypes.AUTH_CLIENT_LOAD_SUCCESS,\n  ActionTypes.AUTH_CLIENT_LOAD_SUCCESS,\n)<void, void, void>();\n\nexport const handleAuthClientLoad = () => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof authClientLoadActions>>,\n) => {\n  dispatch(authClientLoadActions.request());\n\n  return api.load('client:auth2')\n    .then(() => {\n      return dispatch(authClientLoadActions.success());\n    })\n    .catch(() => {\n      return dispatch(authClientLoadActions.failure());\n    });\n};\n\nexport const authChanged = createAction(ActionTypes.AUTH_CHANGED, action => {\n  return (signedIn: boolean) => action(signedIn);\n});\n\nexport const authClientInitActions = createAsyncAction(\n  ActionTypes.AUTH_CLIENT_INIT_REQUEST,\n  ActionTypes.AUTH_CLIENT_INIT_SUCCESS,\n  ActionTypes.AUTH_CLIENT_INIT_FAILURE,\n)<void, void, void>();\n\nexport const handleAuthClientInit = () => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof authClientInitActions|typeof authChanged>>,\n) => {\n  dispatch(authClientInitActions.request());\n\n  return api.init(`${process.env.REACT_APP_GOOGLE_CLIENT_ID}`)\n    .then(() => {\n      console.log('after client init');\n\n      dispatch(authClientInitActions.success());\n\n      api.authListen((auth) => dispatch(authChanged(auth)));\n\n      dispatch(authChanged(api.getAuth()));\n\n      return dispatch(authClientInitActions.success());\n    })\n    .catch((error: any) => {\n      console.log('error', error);\n      return dispatch(authClientInitActions.failure());\n    });\n};\n\nexport const apiInit = () => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof authClientLoadActions|typeof authClientInitActions|typeof authChanged>>,\n  getState: () => IRootState\n) => {\n  const {authClientLoad, authClientInit,} = getState();\n\n  if (!authClientLoad.loaded && !authClientLoad.loading) {\n    dispatch(handleAuthClientLoad());\n  }\n\n  if (authClientLoad.loaded && (!authClientInit.initiated && !authClientInit.initiating)) {\n    dispatch(handleAuthClientInit());\n  }\n}\n\nexport const initLoadActions = createAsyncAction(\n  ActionTypes.INIT_LOAD_REQUEST,\n  ActionTypes.INIT_LOAD_SUCCESS,\n  ActionTypes.INIT_LOAD_FAILURE,\n)<void, api.IBatchGetResponse, string>();\n\nexport const initLoad = (spreadsheetId: string) => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof initLoadActions>>,\n) => {\n  dispatch(initLoadActions.request());\n\n  api.batchGet({\n      spreadsheetId,\n      ranges: Object\n        .keys(sheetNames)\n        .map(key => `${sheetNames[key]}!A2:K`)\n    })\n    .then((response: api.IBatchGetResponse) => {\n      console.log('initLoad', response);\n\n      dispatch(initLoadActions.success(response));\n    })\n    .catch((error: string) => {\n      console.log(error)\n      dispatch(initLoadActions.failure(error));\n    });\n};\n\nexport const spreadhsheetChanged = createAction(ActionTypes.SPREADSHEET_CHANGED, action => {\n  return (spreadsheetId: string) => action(spreadsheetId);\n});\n\nexport interface ISaveEntityPayload {\n  type: ENTITY_TYPES;\n  entity: Entity;\n}\n\nexport interface ISaveEntityResponse {\n  spreadsheetId: string;\n  tableRange: string;\n  updates: {\n    spreadsheetId: string;\n    updatedRange: string;\n    updatedRows: number;\n    updatedColumns: number;\n    updatedCells: number;\n  }\n}\n\nexport const saveEntityActions = createAsyncAction(\n  ActionTypes.SAVE_ENTITY_REQUEST,\n  ActionTypes.SAVE_ENTITY_SUCCESS,\n  ActionTypes.SAVE_ENTITY_FAILURE,\n)<void, ISaveEntityResponse, string>();\n\nexport const saveEntity = (\n  {type, entity}: ISaveEntityPayload\n) => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof saveEntityActions>>,\n  getState: () => IRootState\n) => {\n  dispatch(saveEntityActions.request());\n\n  const {spreadsheetId} = getState();\n\n  console.log('saveEntity', type, entity);\n  console.log('saveEntity', type, entity, formatEntity(type, entity));\n\n  (\n    entity.id\n      ? api.update(spreadsheetId.value, type, entity)\n      : api.append(spreadsheetId.value, type, entity)\n  )\n    .then(async (response: ISaveEntityResponse) => {\n      console.log(response);\n\n      dispatch(saveEntityActions.success(response));\n\n      try {\n        await initLoad(spreadsheetId.value)(dispatch);\n      } catch (e) {\n        console.log(e)\n      }\n    })\n    .catch((error: string) => {\n      dispatch(saveEntityActions.failure(error));\n    });\n};\n\nexport const signIn = createAction(ActionTypes.SIGN_IN, action => {\n  return () => {\n    api.signIn();\n    return action();\n  }\n});\n\nexport const signOut = createAction(ActionTypes.SIGN_OUT, action => {\n  return () => {\n    api.signOut();\n    return action();\n  }\n});\n","import { formatEntity, sheetNames, Entity, ENTITY_TYPES } from \"../app\";\n\nexport interface CustomWindow extends Window {\n  gapi: any;\n}\n\ndeclare let window: CustomWindow;\n\nexport const load = (type: string) => new Promise((resolve) => {\n  window.gapi.load(type, () => {\n    resolve(true);\n  });\n});\n\nexport const init = (clientId: string) => window.gapi.client\n  .init({\n    discoveryDocs: [\n      \"https://sheets.googleapis.com/$discovery/rest?version=v4\"\n    ],\n    clientId,\n    scope: \"https://www.googleapis.com/auth/spreadsheets\"\n  });\n\nexport const signIn = () => window.gapi.auth2.getAuthInstance().signIn();\n\nexport const signOut = () => window.gapi.auth2.getAuthInstance().signOut();\n\nexport const authListen = (cb: (auth: boolean) => void) => window.gapi.auth2\n  .getAuthInstance()\n  .isSignedIn\n  .listen(cb);\n\nexport const getAuth = () => window.gapi.auth2.getAuthInstance().isSignedIn.get();\n\nexport interface IValueRange {\n  values: string[][];\n}\nexport interface IBatchGetResponse {\n  result: {\n    valueRanges: IValueRange[]\n  }\n}\n\nexport const batchGet = ({spreadsheetId, ranges}: {\n  spreadsheetId: string,\n  ranges: string[],\n}) => window.gapi.client.sheets.spreadsheets.values\n  .batchGet({\n    spreadsheetId,\n    ranges,\n  });\n\nexport const append = (spreadsheetId: string, type: ENTITY_TYPES, entity: Entity) => {\n  return window.gapi.client.sheets.spreadsheets.values.append({\n    spreadsheetId: spreadsheetId,\n    range: `${sheetNames[type]}!A1`,\n    valueInputOption: \"USER_ENTERED\",\n    insertDataOption: \"INSERT_ROWS\",\n    values: [formatEntity(type, {...entity, createdAt: new Date()})],\n  });\n};\n\nexport const update = (spreadsheetId: string, type: ENTITY_TYPES, entity: Entity) => {\n  return window.gapi.client.sheets.spreadsheets.values.update({\n    spreadsheetId: spreadsheetId,\n    range: entity.id,\n    valueInputOption: \"USER_ENTERED\",\n    values: [formatEntity(type, {...entity, updatedAt: new Date()})],\n  });\n};\n","export const routes = {\n  profile: '/me',\n  spreadsheet: '/spreadsheet',\n  accounts: {\n    list: '/accounts/list',\n    new: '/accounts/new',\n    view: '/accounts/edit/:id',\n  },\n  currencies: {\n    list: '/currencies/list',\n    new: '/currencies/new',\n    view: '/currencies/edit/:id',\n  },\n  categories: {\n    list: '/categories/list',\n    new: '/categories/new',\n    view: '/categories/edit/:id',\n  },\n  transactions: {\n    list: '/transactions/list',\n    new: '/transactions/new',\n    view: '/transactions/edit/:id',\n  },\n  default: '/',\n};\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { routes } from '../../config';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IAuthState, IAuthClientInitState, IAuthClientLoadState, IDataState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  brand: {\n    color: 'inherit',\n    textDecoration: 'none',\n    display: 'flex',\n    alignItems: 'inherit',\n    justifyContent: 'inherit',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  list: {\n    width: 250,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  container: {\n    marginBottom: 48,\n  },\n  progress: {\n    position: 'relative' as 'relative',\n    top: 49,\n  },\n  padding: {\n    padding: theme.spacing.unit,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  auth: IAuthState;\n  authClientInit: IAuthClientInitState;\n  authClientLoad: IAuthClientLoadState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  onApiInit(): any;\n  onSignIn(): any;\n  onSignOut(): any;\n}\n\nexport interface IState {\n  isDrawerOpen: boolean;\n}\n\nclass Header extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      isDrawerOpen: false,\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.props.onApiInit();\n  }\n\n  componentDidMount() {\n    this.props.onApiInit();\n  }\n\n  toggleDrawer = (open: boolean) => () => {\n    this.setState({\n      isDrawerOpen: open,\n    });\n  };\n\n  render() {\n    const { classes, auth, data, authClientLoad, authClientInit } = this.props;\n    console.log('loading', this.props.authClientLoad.loading || this.props.authClientInit.initiating);\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <NavLink to={routes.currencies.new} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><AddIcon /></ListItemIcon>\n              <ListItemText primary={'New Currency'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.currencies.list} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'List Currencies'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.categories.new} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><AddIcon /></ListItemIcon>\n              <ListItemText primary={'New Category'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.categories.list} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'List Categories'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.accounts.new} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><AddIcon /></ListItemIcon>\n              <ListItemText primary={'New Account'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.accounts.list} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'List Accounts'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.transactions.new} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><AddIcon /></ListItemIcon>\n              <ListItemText primary={'New Transaction'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.transactions.list} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'List Transactions'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.spreadsheet} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'Spreadsheet'} />\n            </ListItem>\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          {!auth.signedIn && (\n            <ListItem\n              button\n              onClick={e => {\n                e.preventDefault();\n                this.props.onSignIn();\n              }}\n            >\n              <ListItemIcon><ExitToApp /></ListItemIcon>\n              <ListItemText primary={'Login'} />\n            </ListItem>\n          )}\n          {auth.signedIn && (\n            <NavLink to={routes.profile} className={classes.sideListItem}>\n              <ListItem button>\n                <ListItemIcon><AccountCircle /></ListItemIcon>\n                <ListItemText primary={'Profile'} />\n              </ListItem>\n            </NavLink>\n          )}\n          {auth.signedIn && (\n            <ListItem\n              button\n              onClick={e => {\n                e.preventDefault();\n                this.props.onSignOut();\n              }}\n            >\n              <ListItemIcon><PowerSettingsNew /></ListItemIcon>\n              <ListItemText primary={'Logout'} />\n            </ListItem>\n          )}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.container}>\n        <AppBar\n          position=\"fixed\"\n        >\n          <Toolbar variant=\"dense\">\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon onClick={this.toggleDrawer(true)} />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <NavLink to={routes.default} className={classes.brand}>\n                Wallet Cat\n              </NavLink>\n            </Typography>\n            {!auth.signedIn && (\n              <div>\n                <Button\n                  color=\"inherit\"\n                  // color=\"primary\"\n                  disabled={this.props.authClientLoad.loading || this.props.authClientInit.initiating}\n                  // variant=\"contained\"\n                  onClick={e => {\n                    e.preventDefault();\n                    this.props.onSignIn();\n                  }}\n                >Login</Button>\n              </div>\n            )}\n            {auth.signedIn && (\n              <div>\n                <IconButton\n                  color=\"inherit\"\n                  className={classes.padding}\n                >\n                  <NavLink to={routes.profile} className={classes.brand}>\n                    <AccountCircle fontSize=\"small\" />\n                  </NavLink>\n                </IconButton>\n                <Button\n                  color=\"inherit\"\n                  // color=\"primary\"\n                  disabled={this.props.authClientLoad.loading || this.props.authClientInit.initiating}\n                  // variant=\"contained\"\n                  onClick={e => {\n                    e.preventDefault();\n                    this.props.onSignOut();\n                  }}\n                >Logout</Button>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n        { (data.processing || authClientInit.initiating || authClientLoad.loading) &&\n          <LinearProgress className={classes.progress} color=\"secondary\" />\n        }\n        <Drawer open={this.state.isDrawerOpen} onClose={this.toggleDrawer(false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Header);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport {\n  apiInit,\n  initLoad,\n  spreadhsheetChanged,\n  signIn,\n  signOut,\n} from '../../actions';\nimport Header from '../../components/Header';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    authClientLoad: state.authClientLoad,\n    authClientInit: state.authClientInit,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onApiInit: () => dispatch(apiInit()),\n    onSpreadsheetIdChange: (spreadsheetId: string) => dispatch(spreadhsheetChanged(spreadsheetId)),\n    onInitLoad: (spreadsheetId: string) => dispatch(initLoad(spreadsheetId)),\n    onSignIn: () => signIn(),\n    onSignOut: () => signOut(),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { routes } from '../../config';\nimport { IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  titlePrimary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  titleSecondary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n}\n\nclass AccountList extends Component<IProps> {\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      <React.Fragment>\n        <List component=\"nav\">\n          {\n            data.accountIds.map((id, index) => {\n              const item = data.accounts[id];\n              return (\n                <NavLink\n                  to={routes.accounts.view.replace(':id', id)}\n                  className={classes.sideListItem}\n                  key={index}\n                >\n                  <ListItem\n                    button\n                    dense={true}\n                  >\n                    <ListItemText\n                      primary={item.name}\n                      secondary={item.description}\n                    />\n                  </ListItem>\n                </NavLink>\n              )\n            })\n          }\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AccountList);\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { routes } from '../../config';\nimport AccountList from '../../components/AccountList';\nimport { IAuthState, ISpreadsheetIdState, IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<AccountListPage> {\n  auth: IAuthState;\n  spreadsheetId: ISpreadsheetIdState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass AccountListPage extends Component<IProps> {\n  render() {\n    const { classes, auth, spreadsheetId, data } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <AccountList\n              data={data}\n            />\n          </Paper>\n        )}\n        {auth.signedIn && spreadsheetId.value && (\n          <Link to={routes.accounts.new}>\n            <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n              <AddIcon />\n            </Fab>\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AccountListPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AccountListPage from '../../pages/AccountListPage';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountListPage);\n\nexport default Container;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MUSelect from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nexport interface IOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface IProps<ClassKey extends string = string> {\n  label: string;\n  name: string;\n  options: IOption[];\n  value: string;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  onChange(event: React.SyntheticEvent): void;\n  placeholder?: string;\n}\n\nconst Select = ({\n  classes,\n  options,\n  value,\n  label,\n  name,\n  onChange,\n  placeholder,\n}: IProps) => (\n  <FormControl className={classes.formControl}>\n    <InputLabel htmlFor={name}>{label}</InputLabel>\n    <MUSelect\n      value={value}\n      onChange={onChange}\n      displayEmpty={false}\n      name={name}\n      className={classes.select}\n    >\n      <MenuItem value=\"\" disabled={true} key=\"\">\n        {placeholder}\n      </MenuItem>\n      {\n        options.map(option => (\n          <MenuItem value={option.value} disabled={option.disabled} key={option.value}>{option.label}</MenuItem>\n        ))\n      }\n    </MUSelect>\n  </FormControl>\n);\n\nexport default Select;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '../Select';\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\";\nimport { IAccount } from \"../../app\";\nimport { FormikProps } from \"formik\";\nimport { IDataState } from \"../../reducers/initialState\";\n\nconst styles = (theme: Theme) => ({\n  formControlControls: {\n    display: 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // width: 400,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  formControl: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    minWidth: 200,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends FormikProps<IAccount> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n  onGoBack: () => any;\n}\n\nclass Form extends React.Component<IProps> {\n  handleChange = (name: string) => (event: React.SyntheticEvent) => {\n    const {\n      handleChange,\n      setFieldTouched,\n    } = this.props;\n\n    event.persist();\n\n    handleChange(event);\n    setFieldTouched(name, true, false);\n  }\n\n  render() {\n    const {\n      data,\n\n      classes,\n      values: {\n        name,\n        currencyId,\n        description,\n      },\n      errors,\n      touched,\n      isValid,\n      handleSubmit,\n    } = this.props;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          helperText={touched.name ? errors.name : \"\"}\n          error={touched.name && Boolean(errors.name)}\n          className={classes.textField}\n          value={name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        <br />\n        <Select\n          classes={classes}\n          label=\"Currency\"\n          placeholder=\"Currency\"\n          name=\"currencyId\"\n          options={data.currencyIds.map(item => ({value: item, label: data.currencies[item].name}))}\n          value={currencyId}\n          onChange={this.handleChange('currencyId')}\n        />\n        <br />\n        <TextField\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          helperText={touched.description ? errors.description : \"\"}\n          error={touched.description && Boolean(errors.description)}\n          className={classes.textField}\n          value={description}\n          onChange={this.handleChange('description')}\n          margin=\"normal\"\n        />\n        <FormControl className={classes.formControlControls} fullWidth>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.props.onGoBack}\n          >\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            // fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isValid}\n            className={classes.button}\n          >\n            Save\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n};\n\nexport default withStyles(styles, { withTheme: true })(Form);\n","import * as Yup from 'yup';\n\nexport const spreadsheetForm = Yup.object({\n  spreadsheetId: Yup\n    .string()\n    .required(\"spreadsheetId is required\"),\n});\n\nexport const transactionNewForm = Yup.object({\n  categoryId:  Yup\n    .string()\n    .required(\"category is required\"),\n  transactionItems: Yup\n    .array()\n    .of(\n      Yup.object().shape({\n        amount: Yup.number().required(),\n        accountId: Yup.string().required(),\n      })\n    )\n    .min(2)\n    .required(\"category is required\"),\n});\n\nexport const currencyNewForm = Yup.object({\n  name: Yup\n    .string()\n    .required(\"name is required\"),\n  symbol: Yup\n    .string()\n    .required(\"symbol is required\"),\n  description: Yup\n    .string(),\n});\n\nexport const categoryNewForm = Yup.object({\n  name: Yup\n    .string()\n    .required(\"name is required\"),\n  parentId: Yup\n    .string(),\n  description: Yup\n    .string(),\n});\n\nexport const accountNewForm = Yup.object({\n  name: Yup\n    .string()\n    .required(\"name is required\"),\n  currencyId: Yup\n    .string()\n    .required(\"currency is required\"),\n  description: Yup\n    .string(),\n});\n","import React, { Component } from 'react';\nimport { Formik, FormikActions } from \"formik\";\nimport Form from './Form';\nimport {accountNewForm} from '../../validation';\nimport { ENTITY_TYPE, ENTITY_STATUS, IAccount } from '../../app';\nimport { routes } from '../../config';\nimport { IDataState } from '../../reducers/initialState';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nexport interface IProps extends React.ClassAttributes<AccountForm> {\n  id?: string;\n  data: IDataState;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): any;\n}\n\nclass AccountForm extends Component<IProps> {\n  handleSubmit = async (values: IAccount, actions: FormikActions<IAccount>) => {\n    try {\n      await this.props.onEntitySave({\n        type: ENTITY_TYPE.account,\n        entity: values,\n      });\n      actions.setSubmitting(false);\n\n      this.props.history.push(routes.accounts.list);\n    } catch (error) {\n      console.log('error', error);\n      actions.setSubmitting(false);\n      actions.setErrors(error);\n      actions.setStatus({ msg: 'Set some arbitrary status or data' });\n    }\n  }\n\n  handleGoBack = () => this.props.history.goBack()\n\n  render() {\n    const item: Partial<IAccount> = this.props.id\n      ? this.props.data.accounts[this.props.id]\n      : {};\n\n    const values: IAccount = {\n      id: item.id,\n      name: item.name || '',\n      currencyId: item.currencyId || '',\n      status: item.status || ENTITY_STATUS.active,\n      description: item.description || '',\n    };\n\n    return (\n      <Formik\n        render={props => <Form\n          {...props}\n          data={this.props.data}\n          onGoBack={this.handleGoBack}\n        />}\n        initialValues={values}\n        validationSchema={accountNewForm}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default AccountForm;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AccountForm from '../../components/AccountForm';\nimport { History } from 'history';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IDataState, IAuthState } from '../../reducers/initialState';\nimport { ISaveEntityPayload } from '../../actions';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<AccountNewPage> {\n  auth: IAuthState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass AccountNewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <AccountForm\n              data={data}\n              onEntitySave={this.props.onEntitySave}\n              history={history}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AccountNewPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AccountNewPage from '../../pages/AccountNewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountNewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AccountForm from '../../components/AccountForm';\nimport { IAuthState, IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\nimport { RouteComponentProps } from 'react-router';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IRouteParams {\n  id: string;\n}\n\nexport interface IProps<ClassKey extends string = string>\n  extends RouteComponentProps<IRouteParams>, React.ClassAttributes<AccountViewPage>\n{\n  auth: IAuthState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass AccountViewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history, match } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <AccountForm\n              data={data}\n              onEntitySave={this.props.onEntitySave}\n              history={history}\n              id={match.params.id}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AccountViewPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport AccountViewPage from '../../pages/AccountViewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountViewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { routes } from '../../config';\nimport { IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  titlePrimary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  titleSecondary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n}\n\nclass CurrencyList extends Component<IProps> {\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      <React.Fragment>\n        <List component=\"nav\">\n          {\n            data.currencyIds.map((id, index) => {\n              const item = data.currencies[id];\n              return (\n                <NavLink\n                  to={routes.currencies.view.replace(':id', id)}\n                  className={classes.sideListItem}\n                  key={index}\n                >\n                  <ListItem\n                    button\n                    dense={true}\n                  >\n                    <ListItemText\n                      primary={item.symbol}\n                      secondary={item.name}\n                    />\n                  </ListItem>\n                </NavLink>\n              )\n            })\n          }\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CurrencyList);\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { routes } from '../../config';\nimport CurrencyList from '../../components/CurrencyList';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IAuthState, ISpreadsheetIdState, IDataState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<CurrencyListPage> {\n  auth: IAuthState;\n  spreadsheetId: ISpreadsheetIdState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass CurrencyListPage extends Component<IProps> {\n  render() {\n    const { classes, auth, spreadsheetId, data } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          {auth.signedIn && (\n            <Paper className={classes.root} elevation={1}>\n              <CurrencyList\n                data={data}\n              />\n            </Paper>\n          )}\n        </div>\n        {auth.signedIn && spreadsheetId.value && (\n          <Link to={routes.currencies.new}>\n            <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n              <AddIcon />\n            </Fab>\n          </Link>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CurrencyListPage);\n","import { connect } from 'react-redux';\n\nimport CurrencyListPage from '../../pages/CurrencyListPage';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrencyListPage);\n\nexport default Container;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\";\nimport { FormikProps } from \"formik\";\nimport { ICurrency } from \"../../app\";\n\nconst styles = (theme: Theme) => ({\n  formControlControls: {\n    display: 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // width: 400,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends FormikProps<ICurrency> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  onGoBack: () => any;\n}\n\nclass Form extends React.Component<IProps> {\n  handleChange = (name: string) => (e: React.SyntheticEvent) => {\n    const {\n      handleChange,\n      setFieldTouched\n    } = this.props;\n\n    e.persist();\n\n    handleChange(e);\n    setFieldTouched(name, true, false);\n  }\n\n  render() {\n    const {\n      classes,\n      values: {\n        name,\n        symbol,\n        description,\n      },\n      errors,\n      touched,\n      isValid,\n      handleSubmit,\n    } = this.props;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          helperText={touched.name ? errors.name : \"\"}\n          error={touched.name && Boolean(errors.name)}\n          className={classes.textField}\n          value={name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          id=\"symbol\"\n          name=\"symbol\"\n          label=\"Symbol\"\n          helperText={touched.symbol ? errors.symbol : \"\"}\n          error={touched.symbol && Boolean(errors.symbol)}\n          className={classes.textField}\n          value={symbol}\n          onChange={this.handleChange('symbol')}\n          margin=\"normal\"\n        />\n        <br />\n        <TextField\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          helperText={touched.description ? errors.description : \"\"}\n          error={touched.description && Boolean(errors.description)}\n          className={classes.textField}\n          value={description}\n          onChange={this.handleChange('description')}\n          margin=\"normal\"\n        />\n        <FormControl className={classes.formControlControls} fullWidth>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.props.onGoBack}\n          >\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            // fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isValid}\n            className={classes.button}\n          >\n            Save\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n};\n\nexport default withStyles(styles, { withTheme: true })(Form);\n","import React, { Component } from 'react';\nimport { Formik, FormikActions } from \"formik\";\nimport Form from './Form';\nimport {currencyNewForm} from '../../validation';\nimport { ENTITY_TYPE, ENTITY_STATUS, ICurrency } from '../../app';\nimport { routes } from '../../config';\nimport { IDataState } from '../../reducers/initialState';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nexport interface IProps extends React.ClassAttributes<CurrencyForm> {\n  id?: string;\n  data: IDataState;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): any;\n}\n\nclass CurrencyForm extends Component<IProps> {\n  handleSubmit = async (values: ICurrency, actions: FormikActions<ICurrency>) => {\n    let result;\n    try {\n      result = await this.props.onEntitySave({\n        type: ENTITY_TYPE.currency,\n        entity: values,\n      });\n      actions.setSubmitting(false);\n\n      this.props.history.push(routes.currencies.list)\n    } catch (error) {\n      console.log('error', error);\n      actions.setSubmitting(false);\n      actions.setErrors(error);\n      actions.setStatus({ msg: 'Set some arbitrary status or data' });\n    }\n  }\n\n  handleGoBack = () => this.props.history.goBack()\n\n  render() {\n    const item: Partial<ICurrency> = this.props.id\n      ? this.props.data.currencies[this.props.id]\n      : {};\n\n    const values: ICurrency = {\n      id: item.id,\n      name: item.name || '',\n      symbol: item.symbol || '',\n      status: item.status || ENTITY_STATUS.active,\n      description: item.description || '',\n    };\n\n    return (\n      <Formik\n        render={props => <Form\n          {...props}\n          onGoBack={this.handleGoBack}\n        />}\n        initialValues={values}\n        validationSchema={currencyNewForm}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default CurrencyForm;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CurrencyForm from '../../components/CurrencyForm';\nimport { IAuthState, IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { History } from 'history';\nimport { ISaveEntityPayload } from '../../actions';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<CurrencyNewPage> {\n  auth: IAuthState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass CurrencyNewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <CurrencyForm\n              data={data}\n              onEntitySave={this.props.onEntitySave}\n              history={history}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CurrencyNewPage);\n","import { connect } from 'react-redux';\n\nimport CurrencyNewPage from '../../pages/CurrencyNewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrencyNewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CurrencyForm from '../../components/CurrencyForm';\nimport { RouteComponentProps } from 'react-router';\nimport { IAuthState, IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IRouteParams {\n  id: string;\n}\n\nexport interface IProps<ClassKey extends string = string>\n  extends RouteComponentProps<IRouteParams>, React.ClassAttributes<CurrencyViewPage>\n{\n  auth: IAuthState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass CurrencyViewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history, match } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <CurrencyForm\n              data={data}\n              onEntitySave={this.props.onEntitySave}\n              history={history}\n              id={match.params.id}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CurrencyViewPage);\n","import { connect } from 'react-redux';\n\nimport CurrencyViewPage from '../../pages/CurrencyViewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrencyViewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { routes } from '../../config';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IDataState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  titlePrimary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  titleSecondary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n}\n\nclass CategoryList extends Component<IProps> {\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      <React.Fragment>\n        <List component=\"nav\">\n          {\n            data.categoryIds.map((id, index) => {\n              const item = data.categories[id];\n              return (\n                <NavLink\n                  to={routes.categories.view.replace(':id', id)}\n                  className={classes.sideListItem}\n                  key={index}\n                >\n                  <ListItem\n                    button\n                    dense={true}\n                  >\n                    <ListItemText\n                      primary={item.name}\n                      secondary={item.description}\n                    />\n                  </ListItem>\n                </NavLink>\n              )\n            })\n          }\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CategoryList);\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { routes } from '../../config';\nimport CategoryList from '../../components/CategoryList';\nimport { IAuthState, ISpreadsheetIdState, IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<CategoryListPage> {\n  auth: IAuthState;\n  spreadsheetId: ISpreadsheetIdState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass CategoryListPage extends Component<IProps> {\n  render() {\n    const { classes, auth, spreadsheetId, data } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <CategoryList\n              data={data}\n            />\n          </Paper>\n        )}\n        {auth.signedIn && spreadsheetId.value && (\n          <Link to={routes.categories.new}>\n            <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n              <AddIcon />\n            </Fab>\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CategoryListPage);\n","import { connect } from 'react-redux';\n\nimport CategoryListPage from '../../pages/CategoryListPage';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryListPage);\n\nexport default Container;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '../Select';\nimport { FormikProps } from \"formik\";\nimport { ICategory } from \"../../app\";\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\";\nimport { IDataState } from \"../../reducers/initialState\";\n\nconst styles = (theme: Theme) => ({\n  formControlControls: {\n    display: 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // width: 400,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  formControl: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    minWidth: 200,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends FormikProps<ICategory> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n  onGoBack: () => any;\n}\n\nclass Form extends React.Component<IProps> {\n  handleChange = (name: string) => (event: React.SyntheticEvent) => {\n    const {\n      handleChange,\n      setFieldTouched\n    } = this.props;\n\n    event.persist();\n\n    handleChange(event);\n    setFieldTouched(name, true, false);\n  }\n\n  render() {\n    const {\n      data,\n      classes,\n      values: {\n        name,\n        description,\n        parentId,\n      },\n      errors,\n      touched,\n      isValid,\n      handleSubmit,\n    } = this.props;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          helperText={touched.name ? errors.name : \"\"}\n          error={touched.name && Boolean(errors.name)}\n          className={classes.textField}\n          value={name}\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        <br />\n        <Select\n          classes={classes}\n          label=\"Parent category\"\n          placeholder=\"Parent category\"\n          options={data.categoryIds.map(item => ({value: item, label: data.categories[item].name}))}\n          value={parentId || ''}\n          onChange={this.handleChange('parentId')}\n          name=\"parentId\"\n        />\n        <br />\n        <TextField\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          helperText={touched.description ? errors.description : \"\"}\n          error={touched.description && Boolean(errors.description)}\n          className={classes.textField}\n          value={description}\n          onChange={this.handleChange('description')}\n          margin=\"normal\"\n        />\n        <FormControl className={classes.formControlControls} fullWidth>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.props.onGoBack}\n          >\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            // fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isValid}\n            className={classes.button}\n          >\n            Save\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n};\n\nexport default withStyles(styles, { withTheme: true })(Form);\n","import React, { Component } from 'react';\nimport { Formik, FormikActions } from \"formik\";\nimport Form from './Form';\nimport {categoryNewForm} from '../../validation';\nimport { ENTITY_TYPE, ENTITY_STATUS, ICategory } from '../../app';\nimport { routes } from '../../config';\nimport { IDataState } from '../../reducers/initialState';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nexport interface IProps extends React.ClassAttributes<CategoryForm> {\n  id?: string;\n  data: IDataState;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): any;\n}\n\nclass CategoryForm extends Component<IProps> {\n  handleSubmit = async (values: ICategory, actions: FormikActions<ICategory>) => {\n    try {\n      await this.props.onEntitySave({\n        type: ENTITY_TYPE.category,\n        entity: values,\n      });\n      actions.setSubmitting(false);\n\n      this.props.history.push(routes.categories.list)\n    } catch (error) {\n      console.log('error', error);\n      actions.setSubmitting(false);\n      actions.setErrors(error);\n      actions.setStatus({ msg: 'Set some arbitrary status or data' });\n    }\n  }\n\n  handleGoBack = () => this.props.history.goBack()\n\n  render() {\n    const item: Partial<ICategory> = this.props.id\n      ? this.props.data.categories[this.props.id]\n      : {};\n\n    const values = {\n      id: item.id,\n      parentId: item.parentId || '',\n      name: item.name || '',\n      status: item.status || ENTITY_STATUS.active,\n      description: item.description || '',\n    };\n\n    return (\n      <Formik\n        render={props => <Form\n          {...props}\n          data={this.props.data}\n          onGoBack={this.handleGoBack}\n        />}\n        initialValues={values}\n        validationSchema={categoryNewForm}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default CategoryForm;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CategoryForm from '../../components/CategoryForm';\nimport { History } from 'history';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ISaveEntityPayload } from '../../actions';\nimport { IAuthState, IDataState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<CategoryNewPage> {\n  auth: IAuthState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass CategoryNewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <CategoryForm\n              data={data}\n              onEntitySave={this.props.onEntitySave}\n              history={history}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CategoryNewPage);\n","import { connect } from 'react-redux';\n\nimport CategoryNewPage from '../../pages/CategoryNewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryNewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CategoryForm from '../../components/CategoryForm';\nimport { RouteComponentProps } from 'react-router';\nimport { IDataState, IAuthState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IRouteParams {\n  id: string;\n}\n\nexport interface IProps<ClassKey extends string = string>\n  extends RouteComponentProps<IRouteParams>, React.ClassAttributes<CategoryViewPage>\n{\n  auth: IAuthState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass CategoryViewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history, match } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <CategoryForm\n              data={data}\n              onEntitySave={this.props.onEntitySave}\n              history={history}\n              id={match.params.id}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CategoryViewPage);\n","import { connect } from 'react-redux';\n\nimport CategoryViewPage from '../../pages/CategoryViewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryViewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { routes } from '../../config';\nimport { ENTITY_STATUS } from '../../app';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IDataState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  titlePrimary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  titleSecondary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n}\n\nclass TransactionList extends Component<IProps> {\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      <React.Fragment>\n        <List component=\"nav\">\n          {\n            data.transactionIds.map((id: string, index: number) => {\n              const item = data.transactions[id];\n              return (\n                <NavLink\n                  to={routes.transactions.view.replace(':id', id)}\n                  className={classes.sideListItem}\n                  key={index}\n                >\n                  <ListItem\n                    button\n                    dense={true}\n                  >\n                    <ListItemText\n                      primary={(\n                        <span className={classes.titlePrimary}>\n                          <span>\n                            {\n                              data.transactionItemIds\n                                .filter(transactionItemId => data.transactionItems[transactionItemId])\n                                .map(transactionItemId => data.transactionItems[transactionItemId])\n                                .filter(transactionItem => transactionItem.transactionId === item.id)\n                                .filter(transactionItem => transactionItem.status === ENTITY_STATUS.active)\n                                .map((transactionItem, index) => {\n                                  const account = data.accounts[transactionItem.accountId];\n                                  return (\n                                    <React.Fragment key={index}>\n                                      <span>\n                                        {account.name} {transactionItem.amount} {data.currencies[account.currencyId].symbol}\n                                      </span>\n                                      {' -> '}\n                                    </React.Fragment>\n                                  )\n                                })\n                            }\n                            <span>{item.toAccount} {item.toAccountCurrency}</span>\n                          </span>\n                          <span>{item.date}</span>\n                        </span>\n                      )}\n                      secondary={(\n                        <span className={classes.titleSecondary}>\n                          <span>{data.categories[item.categoryId].name}</span>\n                          <span>{item.amount}</span>\n                        </span>\n                      )}\n                    />\n                  </ListItem>\n                </NavLink>\n              )\n            })\n          }\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(TransactionList);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { Link } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport TransactionList from '../../components/TransactionList';\nimport { routes } from '../../config';\nimport { IAuthState, ISpreadsheetIdState, IDataState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'fixed' as 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  titlePrimary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  titleSecondary: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<TransactionListPage> {\n  auth: IAuthState;\n  spreadsheetId: ISpreadsheetIdState;\n  data: IDataState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass TransactionListPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, spreadsheetId } = this.props;\n\n    if (auth.signedIn && !spreadsheetId.value) {\n      console.log('TransactionListPage redirect');\n      return <Redirect to={routes.spreadsheet} />\n    }\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          {auth.signedIn && spreadsheetId.value && (\n            <Paper className={classes.root} elevation={1}>\n              <TransactionList\n                data={data}\n              />\n            </Paper>\n          )}\n        </div>\n        {auth.signedIn && spreadsheetId.value && (\n          <Link to={routes.transactions.new}>\n            <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n              <AddIcon />\n            </Fab>\n          </Link>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(TransactionListPage);\n","import { connect } from 'react-redux';\n\nimport {\n  apiInit,\n  initLoad,\n  spreadhsheetChanged,\n} from '../../actions';\n\nimport TransactionListPage from '../../pages/TransactionListPage';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    authClientLoad: state.authClientLoad,\n    authClientInit: state.authClientInit,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onApiInit: () => dispatch(apiInit()),\n    onSpreadsheetIdChange: (spreadsheetId: string) => dispatch(spreadhsheetChanged(spreadsheetId)),\n    onInitLoad: (spreadsheetId: string) => dispatch(initLoad(spreadsheetId)),\n  };\n};\n\nconst TransactionListPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TransactionListPage);\n\nexport default TransactionListPageContainer;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { DateTimePicker } from 'material-ui-pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport {Field, FieldArray, FormikProps, FieldProps} from 'formik';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Select from '../Select';\nimport { ENTITY_STATUS } from '../../app';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IDataState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    // width: 400,\n  },\n  fab: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  container: {\n    // display: 'flex',\n    // flexDirection: 'column',\n    // flexGrow: 0,\n  },\n  formControl: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit,\n    minWidth: 120,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  formControlControls: {\n    display: 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n  },\n\n  transactionItemsContainer: {\n    alignItems: 'baseline',\n    display: 'flex',\n    flexGrow: 0,\n  },\n});\n\nexport interface IValuesTransactionItem {\n  id?: string;\n  amount: number;\n  accountId: string;\n  status: ENTITY_STATUS;\n}\n\nexport interface IValues {\n  id?: string;\n  categoryId: string;\n  description: string;\n  date: string|Date;\n  status: ENTITY_STATUS;\n  transactionItems: IValuesTransactionItem[];\n}\n\nexport interface IProps<ClassKey extends string = string> extends FormikProps<IValues> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  data: IDataState;\n  onGoBack: () => any;\n}\n\nclass TransactionNewForm extends Component<IProps> {\n  handleDateChange = (date: Date) => {\n    const name = 'date';\n    const {\n      setFieldTouched,\n      setFieldValue,\n    } = this.props;\n\n    setFieldValue(name, date);\n    setFieldTouched(name, true, false);\n  };\n\n  handleChange = (name: keyof IValues) => (event: React.SyntheticEvent) => {\n    const {\n      setFieldTouched,\n      handleChange,\n    } = this.props;\n\n    event.persist();\n\n    handleChange(event);\n    setFieldTouched(name, true, false);\n  }\n\n  handleFieldArrayChange = (name: string) => (event: React.SyntheticEvent) => {\n    this.handleChange(name as any)(event); // TODO\n  }\n\n  render() {\n    const { classes, data, } = this.props;\n\n    console.log('data', data);\n    console.log('values', this.props.values);\n    const {\n      values: {\n        categoryId,\n        description,\n        date,\n        transactionItems,\n      },\n      errors,\n      touched,\n      handleChange,\n      isValid,\n      setFieldTouched,\n      handleSubmit,\n    } = this.props;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"description\"\n          label=\"Description\"\n          fullWidth\n          className={classes.textField}\n          value={description}\n          onChange={this.handleChange('description')}\n          margin=\"normal\"\n        />\n        <DateTimePicker\n          label=\"Date\"\n          value={date}\n          className={classes.textField}\n          onChange={this.handleDateChange}\n          margin=\"normal\"\n        />\n        <Select\n          classes={classes}\n          label=\"Category\"\n          placeholder=\"Category\"\n          options={data.categoryIds.map(item => ({value: item, label: data.categories[item].name}))}\n          value={categoryId}\n          onChange={this.handleChange('categoryId')}\n          name=\"categoryId\"\n        />\n        <br />\n        <FieldArray\n          name=\"transactionItems\"\n          render={arrayHelpers => (\n            <React.Fragment>\n              {transactionItems\n                .filter(transactionItem => transactionItem.status === ENTITY_STATUS.active)\n                .map((transactionItem, index) => {\n                  return (\n                    <div key={index} className={classes.transactionItemsContainer}>\n                      <Field\n                        type=\"hidden\"\n                        name={`transactionItems.${index}.id`}\n                        value={transactionItem.id}\n                      />\n                      <Field\n                        name={`transactionItems.${index}.amount`}\n                        render={({ field /* _form */ }: FieldProps<IValues>) => (\n                          <TextField\n                            {...field}\n                            id={`transactionItems.${index}.amount`}\n                            label=\"Amount\"\n                            className={classes.textField}\n                            value={transactionItem.amount}\n                            onChange={this.handleFieldArrayChange(`transactionItems.${index}.amount`)}\n                            margin=\"normal\"\n                          />\n                        )}\n                      />\n                      <Select\n                        classes={classes}\n                        label=\"Account\"\n                        placeholder=\"Account\"\n                        options={data.accountIds.map(item => ({value: item, label: data.accounts[item].name}))}\n                        value={transactionItem.accountId}\n                        onChange={this.handleFieldArrayChange(`transactionItems.${index}.accountId`)}\n                        name=\"accountId\"\n                      />\n                      <Fab\n                        size=\"small\"\n                        color=\"secondary\"\n                        aria-label=\"Remove\"\n                        onClick={() => arrayHelpers.remove(index)}\n                      >\n                        <RemoveIcon />\n                      </Fab>\n                    </div>\n                  );\n                })\n              }\n              <Fab\n                size=\"small\"\n                color=\"secondary\"\n                aria-label=\"Add\"\n                onClick={() => arrayHelpers.push({\n                  amount: '',\n                  accountId: '',\n                  status: ENTITY_STATUS.active,\n                })}\n              >\n                <AddIcon />\n              </Fab>\n            </React.Fragment>\n          )}\n        />\n        <br />\n        <FormControl className={classes.formControlControls} fullWidth>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.props.onGoBack}\n          >\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={!isValid}\n          >\n            Save\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(TransactionNewForm);\n","import React, { Component } from 'react';\nimport { Formik, FormikActions } from \"formik\";\nimport Form, { IValues, IValuesTransactionItem } from './Form';\nimport {transactionNewForm} from '../../validation';\nimport {\n  ENTITY_TYPE,\n  generateId,\n  ENTITY_STATUS,\n  ITransaction,\n} from '../../app';\nimport { routes } from '../../config';\nimport { ISaveEntityPayload } from '../../actions';\nimport { IDataState } from '../../reducers/initialState';\nimport { History } from 'history';\n\nexport interface IProps extends React.ClassAttributes<TransactionForm> {\n  id?: string;\n  data: IDataState;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): any;\n}\n\nclass TransactionForm extends Component<IProps> {\n  handleSave = async (values: IValues, actions: FormikActions<IValues>) => {\n    let result;\n    try {\n      result = await this.props.onEntitySave({\n        type: ENTITY_TYPE.transaction,\n        entity: values as any, // TODO\n      });\n\n      const transactionId = values.id || generateId(ENTITY_TYPE.transaction, this.props.data.transactionIds.length);\n      console.log({transactionId});\n\n      const updatePromises = values.transactionItems\n        .map(async (transactionItem: IValuesTransactionItem) => {\n          return await this.props.onEntitySave({\n            type: ENTITY_TYPE.transactionItem,\n            entity: {\n              ...transactionItem,\n              transactionId,\n            } as any, // TODO\n          });\n        });\n\n      await Promise.all(updatePromises);\n\n      const transactionItemIds = values.transactionItems\n        .filter((item: IValuesTransactionItem) => item.id)\n        .map((item: IValuesTransactionItem) => item.id);\n\n      const deletePromises = this.props.data.transactionItemIds\n        .map(transactionItemId => this.props.data.transactionItems[transactionItemId])\n        .filter(transactionItem => transactionItem.transactionId === transactionId)\n        .filter(transactionItem => transactionItemIds.indexOf(transactionItem.id) === -1)\n        .map(async transactionItem => {\n          return await this.props.onEntitySave({\n            type: ENTITY_TYPE.transactionItem,\n            entity: {\n              ...transactionItem,\n              transactionId,\n              status: ENTITY_STATUS.deleted,\n              deletedAt: new Date(),\n            },\n          });\n        });\n\n      await Promise.all(deletePromises);\n\n      actions.setSubmitting(false);\n\n      this.props.history.push(routes.transactions.list)\n    } catch (error) {\n      console.log('error', error);\n      actions.setSubmitting(false);\n      actions.setErrors(error);\n      actions.setStatus({ msg: 'Set some arbitrary status or data' });\n    }\n  }\n\n  handleGoBack = () => this.props.history.goBack()\n\n  render() {\n    const item: Partial<ITransaction> = this.props.id\n      ? this.props.data.transactions[this.props.id]\n      : {};\n    const transactionItems = this.props.data.transactionItemIds\n      .map(id => this.props.data.transactionItems[id])\n      .filter(transactionItem => transactionItem.transactionId === item.id)\n      .map(transactionItem => ({\n        id: transactionItem.id,\n        amount: transactionItem.amount || 0,\n        accountId: transactionItem.accountId || '',\n        status: transactionItem.status || ENTITY_STATUS.active,\n      }));\n    const defaultTransactionItems = [\n      {\n        id: '',\n        amount: 0,\n        accountId: '',\n        status: ENTITY_STATUS.active,\n      },\n      {\n        id: '',\n        amount: 0,\n        accountId: '',\n        status: ENTITY_STATUS.active,\n      },\n    ];\n\n    const values: IValues = {\n      id: item.id,\n      categoryId: item.categoryId || '',\n      description: item.description || '',\n      date: item.date || new Date(),\n      status: item.status || ENTITY_STATUS.active,\n      transactionItems: transactionItems.length\n        ? transactionItems\n        : defaultTransactionItems,\n    };\n\n    console.log({values})\n\n    return (\n      <Formik\n        render={props => <Form\n          {...props}\n          data={this.props.data}\n          onGoBack={this.handleGoBack}\n        />}\n        initialValues={values}\n        validationSchema={transactionNewForm}\n        onSubmit={this.handleSave}\n      />\n    );\n  }\n}\n\nexport default TransactionForm;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { routes } from '../../config';\nimport TransactionForm from '../../components/TransactionForm';\nimport { IAuthState, IDataState, ISpreadsheetIdState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<TransactionNewPage> {\n  auth: IAuthState;\n  data: IDataState;\n  spreadsheetId: ISpreadsheetIdState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass TransactionNewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history, spreadsheetId } = this.props;\n    console.log('data', data);\n    console.log('history', history);\n\n    if (auth.signedIn && !spreadsheetId.value) {\n      console.log('TransactionNewPage redirect');\n      return <Redirect to={routes.spreadsheet} />\n    }\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && this.props.spreadsheetId && (\n          <Paper className={classes.root} elevation={1}>\n            <TransactionForm\n              data={data}\n              history={history}\n              onEntitySave={this.props.onEntitySave}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(TransactionNewPage);\n","import { connect } from 'react-redux';\n\nimport {\n  apiInit,\n  initLoad,\n  spreadhsheetChanged,\n  signIn,\n  signOut,\n  saveEntity,\n  ISaveEntityPayload,\n} from '../../actions';\n\nimport TransactionNewPage from '../../pages/TransactionNewPage';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    authClientLoad: state.authClientLoad,\n    authClientInit: state.authClientInit,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onApiInit: () => dispatch(apiInit()),\n    onSpreadsheetIdChange: (spreadsheetId: string) => dispatch(spreadhsheetChanged(spreadsheetId)),\n    onInitLoad: (spreadsheetId: string) => dispatch(initLoad(spreadsheetId)),\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TransactionNewPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TransactionForm from '../../components/TransactionForm';\nimport { RouteComponentProps } from 'react-router';\nimport { IAuthState, IDataState, ISpreadsheetIdState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ISaveEntityPayload } from '../../actions';\nimport { History } from 'history';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IRouteParams {\n  id: string;\n}\n\nexport interface IProps<ClassKey extends string = string>\n  extends RouteComponentProps<IRouteParams>, React.ClassAttributes<TransactionViewPage>\n{\n  auth: IAuthState;\n  data: IDataState;\n  spreadsheetId: ISpreadsheetIdState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  history: History;\n  onEntitySave(payload: ISaveEntityPayload): void;\n}\n\nclass TransactionViewPage extends Component<IProps> {\n  render() {\n    const { classes, auth, data, history, match, spreadsheetId } = this.props;\n    console.log('data', data);\n    console.log('history', history);\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && spreadsheetId.value && (\n          <Paper className={classes.root} elevation={1}>\n            <TransactionForm\n              data={data}\n              history={history}\n              onEntitySave={this.props.onEntitySave}\n              id={match.params.id}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(TransactionViewPage);\n","import { connect } from 'react-redux';\n\nimport TransactionViewPage from '../../pages/TransactionViewPage';\nimport { saveEntity, ISaveEntityPayload } from '../../actions';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onEntitySave: (payload: ISaveEntityPayload) => dispatch(saveEntity(payload)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TransactionViewPage);\n\nexport default Container;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from '@material-ui/core/FormControl';\nimport { FormikProps } from \"formik\";\nimport { ISpreadsheetIdState } from \"../../reducers/initialState\";\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme: Theme) => ({\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  formControlControls: {\n    display: 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n  },\n});\n\nexport interface IValues {\n  spreadsheetId: string;\n}\n\nexport interface IProps<ClassKey extends string = string> extends FormikProps<IValues> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  onGoBack: () => any;\n}\n\nclass Form extends React.Component<IProps> {\n  handleChange = (name: keyof IValues) => (e: React.SyntheticEvent) => {\n    const {\n      handleChange,\n      setFieldTouched\n    } = this.props;\n\n    e.persist();\n\n    handleChange(e);\n    setFieldTouched(name, true, false);\n  }\n\n  render() {\n    const {\n      classes,\n      values: { spreadsheetId },\n      errors,\n      touched,\n      isValid,\n      handleSubmit,\n    } = this.props;\n\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"spreadsheetId\"\n          name=\"spreadsheetId\"\n          label=\"Spreadsheet Id\"\n          helperText={touched.spreadsheetId ? errors.spreadsheetId : \"\"}\n          error={touched.spreadsheetId && Boolean(errors.spreadsheetId)}\n          className={classes.textField}\n          value={spreadsheetId}\n          onChange={this.handleChange('spreadsheetId')}\n          margin=\"normal\"\n        />\n        <FormControl className={classes.formControlControls} fullWidth>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={this.props.onGoBack}\n          >\n            Back\n          </Button>\n          <Button\n            type=\"submit\"\n            // fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isValid}\n          >\n            Save\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n};\n\nexport default withStyles(styles, { withTheme: true })(Form);\n","import React, { Component } from 'react';\nimport { Formik, FormikActions } from \"formik\";\nimport Form, { IValues } from './Form';\nimport {spreadsheetForm} from '../../validation';\nimport { History } from 'history';\nimport { ISpreadsheetIdState } from '../../reducers/initialState';\nimport { routes } from '../../config';\n\nexport interface IProps {\n  history: History;\n  spreadsheetId: ISpreadsheetIdState;\n  onSpreadsheetChange(values: IValues): void;\n}\n\nclass SpreadsheetForm extends Component<IProps> {\n  handleSubmit = (values: IValues, actions: FormikActions<IValues>) => {\n    this.props.onSpreadsheetChange(values);\n    actions.setSubmitting(false);\n    this.props.history.push(routes.default);\n  }\n\n  handleGoBack = () => this.props.history.goBack()\n\n  render() {\n    const values: IValues = {\n      spreadsheetId: this.props.spreadsheetId.value || ''\n    };\n\n    return (\n      <Formik\n        render={props => <Form\n          {...props}\n          onGoBack={this.handleGoBack}\n        />}\n        initialValues={values}\n        validationSchema={spreadsheetForm}\n        onSubmit={this.handleSubmit}\n      />\n    );\n  }\n}\n\nexport default SpreadsheetForm;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SpreadsheetForm from '../../components/SpreadsheetForm';\nimport { IAuthState, ISpreadsheetIdState } from '../../reducers/initialState';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IValues } from '../../components/SpreadsheetForm/Form';\nimport { History } from 'history';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<SpreadsheetPage> {\n  auth: IAuthState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  spreadsheetId: ISpreadsheetIdState;\n  history: History;\n  onSpreadsheetIdChange(spreadsheetId: string): any;\n  onInitLoad(spreadsheetId: string): any;\n}\n\nclass SpreadsheetPage extends Component<IProps> {\n  handleChangeSpreadsheetId = ({spreadsheetId}: IValues) => {\n    console.log('handleChangeSpreadsheetId', spreadsheetId)\n    if (this.props.spreadsheetId.value !== spreadsheetId) {\n      this.props.onSpreadsheetIdChange(spreadsheetId);\n      this.props.onInitLoad(spreadsheetId);\n    }\n  };\n\n  render() {\n    const { classes, auth, history } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            <SpreadsheetForm\n              spreadsheetId={this.props.spreadsheetId}\n              onSpreadsheetChange={this.handleChangeSpreadsheetId}\n              history={history}\n            />\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(SpreadsheetPage);\n","import { connect } from 'react-redux';\n\nimport {\n  apiInit,\n  initLoad,\n  spreadhsheetChanged,\n} from '../../actions';\n\nimport SpreadsheetPage from '../../pages/SpreadsheetPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\nimport { IRootState } from '../../reducers/initialState';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n    authClientLoad: state.authClientLoad,\n    authClientInit: state.authClientInit,\n    data: state.data,\n    spreadsheetId: state.spreadsheetId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    onApiInit: () => dispatch(apiInit()),\n    onSpreadsheetIdChange: (spreadsheetId: string) => dispatch(spreadhsheetChanged(spreadsheetId)),\n    onInitLoad: (spreadsheetId: string) => dispatch(initLoad(spreadsheetId)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SpreadsheetPage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IAuthState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<ProfilePage> {\n  auth: IAuthState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass ProfilePage extends Component<IProps> {\n  render() {\n    const { classes, auth } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {auth.signedIn && (\n          <Paper className={classes.root} elevation={1}>\n            Profile\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(ProfilePage);\n","import { connect } from 'react-redux';\n\nimport ProfilePage from '../../pages/ProfilePage';\nimport { IRootState } from '../../reducers/initialState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProfilePage);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<NoMatchPage> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass NoMatchPage extends Component<IProps> {\n  render() {\n    const { classes, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          404 - Page Not Found\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NoMatchPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport NoMatchPage from '../../pages/NoMatchPage';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NoMatchPage);\n\nexport default Container;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport Header from '../../containers/Header';\nimport AccountListPage from '../../containers/AccountListPage';\nimport AccountNewPage from '../../containers/AccountNewPage';\nimport AccountViewPage from '../../containers/AccountViewPage';\nimport CurrencyListPage from '../../containers/CurrencyListPage';\nimport CurrencyNewPage from '../../containers/CurrencyNewPage';\nimport CurrencyViewPage from '../../containers/CurrencyViewPage';\nimport CategoryListPage from '../../containers/CategoryListPage';\nimport CategoryNewPage from '../../containers/CategoryNewPage';\nimport CategoryViewPage from '../../containers/CategoryViewPage';\nimport TransactionListPage from '../../containers/TransactionListPage';\nimport TransactionNewPage from '../../containers/TransactionNewPage';\nimport TransactionViewPage from '../../containers/TransactionViewPage';\nimport SpreadsheetPage from '../../containers/SpreadsheetPage';\nimport ProfilePage from '../../containers/ProfilePage';\nimport NoMatchPage from '../../containers/NoMatchPage';\nimport { routes } from '../../config';\nimport { Store } from 'redux';\nimport { IRootState } from '../../reducers/initialState';\nimport { History } from 'history';\nimport { Persistor } from 'redux-persist';\n\nexport interface IProps {\n  store: {\n    store: Store<IRootState>;\n    persistor: Persistor;\n  };\n  history: History;\n}\n\nconst Root = ({ store, history }: IProps) => (\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Router history={history}>\n          <div>\n            <Header />\n            <Switch>\n              <Route path={routes.spreadsheet} component={SpreadsheetPage} />\n              <Route path={routes.transactions.new} component={TransactionNewPage} />\n              <Route path={routes.transactions.view} component={TransactionViewPage} />\n              <Route path={routes.transactions.list} component={TransactionListPage} />\n              <Route path={routes.accounts.list} component={AccountListPage} />\n              <Route path={routes.accounts.new} component={AccountNewPage} />\n              <Route path={routes.accounts.view} component={AccountViewPage} />\n              <Route path={routes.currencies.list} component={CurrencyListPage} />\n              <Route path={routes.currencies.new} component={CurrencyNewPage} />\n              <Route path={routes.currencies.view} component={CurrencyViewPage} />\n              <Route path={routes.categories.list} component={CategoryListPage} />\n              <Route path={routes.categories.new} component={CategoryNewPage} />\n              <Route path={routes.categories.view} component={CategoryViewPage} />\n              <Route path={routes.profile} component={ProfilePage} />\n              <Route path={routes.default} component={TransactionListPage} exact={true} />\n              <Route component={NoMatchPage} />\n            </Switch>\n          </div>\n        </Router>\n      </MuiPickersUtilsProvider>\n    </PersistGate>\n  </Provider>\n);\n\nexport default Root;\n","import { RouterState } from 'connected-react-router';\nimport { ITransaction, IAccount, ICategory, ICurrency, ITransactionItem } from '../app';\n\nexport interface IAuthState {\n  signedIn: boolean;\n}\n\nexport interface IAuthClientLoadState {\n  loading: boolean;\n  loaded: boolean;\n  error: string;\n}\n\nexport interface IAuthClientInitState {\n  initiating: boolean;\n  initiated: boolean;\n  error: string;\n}\n\nexport interface IAccounts {\n  [key: string]: IAccount;\n}\n\nexport interface ICategories {\n  [key: string]: ICategory;\n}\n\nexport interface ICurrencies {\n  [key: string]: ICurrency;\n}\n\nexport interface ITransactions {\n  [key: string]: ITransaction;\n}\n\nexport interface ITransactionItems {\n  [key: string]: ITransactionItem;\n}\n\nexport interface IDataState {\n  accountIds: string[];\n  accounts: IAccounts,\n  categoryIds: string[];\n  categories: ICategories,\n  currencyIds: string[];\n  currencies: ICurrencies,\n  transactionIds: string[];\n  transactions: ITransactions,\n  transactionItemIds: string[];\n  transactionItems: ITransactionItems,\n  processing: boolean;\n  loading: boolean;\n  loaded: boolean;\n}\n\nexport interface ISpreadsheetIdState {\n  value: string;\n}\n\nexport interface IRootState {\n  auth: IAuthState;\n  authClientLoad: IAuthClientLoadState;\n  authClientInit: IAuthClientInitState;\n  data: IDataState;\n  spreadsheetId: ISpreadsheetIdState;\n  router?: RouterState;\n}\n\nexport const initialState: IRootState = {\n  auth: {\n    signedIn: false,\n  },\n  authClientLoad: {\n    loading: false,\n    loaded: false,\n    error: '',\n  },\n  authClientInit: {\n    initiating: false,\n    initiated: false,\n    error: '',\n  },\n  data: {\n    accountIds: [],\n    accounts: {},\n    categoryIds: [],\n    categories: {},\n    currencyIds: [],\n    currencies: {},\n    transactionIds: [],\n    transactions: {},\n    transactionItemIds: [],\n    transactionItems: {},\n    processing: false,\n    loading: false,\n    loaded: false,\n  },\n  spreadsheetId: {\n    value: '',\n  },\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { initialState, IAuthState } from './initialState';\nimport * as actions from '../actions';\n\nexport type Actions = ActionType<typeof actions.authChanged>;\n\nexport default (state: IAuthState = initialState.auth, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.authChanged): {\n      return {\n        ...state,\n        signedIn: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { initialState, IAuthClientLoadState } from './initialState';\nimport * as actions from '../actions';\n\nexport type Actions = ActionType<typeof actions.authClientLoadActions>;\n\nexport default (state: IAuthClientLoadState = initialState.authClientLoad, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.authClientLoadActions.request): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case getType(actions.authClientLoadActions.success): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n      };\n    }\n    case getType(actions.authClientLoadActions.failure): {\n      return {\n        ...state,\n        loading: false,\n        loaded: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { initialState, IAuthClientInitState } from './initialState';\nimport * as actions from '../actions';\n\nexport type Actions = ActionType<typeof actions.authClientInitActions>;\n\nexport default (state: IAuthClientInitState = initialState.authClientInit, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.authClientInitActions.request): {\n      return {\n        ...state,\n        initiating: true,\n      };\n    }\n    case getType(actions.authClientInitActions.success): {\n      return {\n        ...state,\n        initiating: false,\n        initiated: true,\n      };\n    }\n    case getType(actions.authClientInitActions.failure): {\n      return {\n        ...state,\n        initiating: false,\n        initiated: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { initialState, IDataState } from './initialState';\nimport * as actions from '../actions';\nimport { sheetNames, entityStateKeys, parseEntity, ENTITY_TYPE, Entity } from '../app';\n\nexport type Actions = ActionType<typeof actions.initLoadActions|typeof actions.saveEntityActions>;\n\nexport default (state: IDataState = initialState.data, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.initLoadActions.request): {\n      return {\n        ...state,\n        processing: true,\n      };\n    }\n    case getType(actions.initLoadActions.success): {\n      if (!action.payload || !action.payload.result) {\n        return state;\n      }\n      const valueRanges = action.payload.result.valueRanges;\n\n      console.log({valueRanges})\n\n      const parsedValues = Object\n        .keys(sheetNames)\n        .reduce((result, current: string, index: number) => {\n          const currentValueRange: string[][] = valueRanges[index] && valueRanges[index].values\n            ? valueRanges[index].values\n            : [];\n          const values = currentValueRange\n            .map(parseEntity(current as ENTITY_TYPE))\n            .filter((item: Entity) => item.id)\n            .reduce(\n              (result, current: Entity) => {\n                if (current.id) {\n                  return {...result, [current.id]: current};\n                }\n                return result;\n              },\n              {}\n            );\n          return {\n            ...result,\n            [entityStateKeys[current].keys]: Object.keys(values),\n            [entityStateKeys[current].values]: values,\n          };\n        }, {});\n\n      return {\n        ...state,\n        ...parsedValues,\n        processing: false,\n        loaded: true,\n        loading: false,\n      };\n    }\n    case getType(actions.saveEntityActions.request): {\n      return {\n        ...state,\n        processing: true,\n      };\n    }\n    case getType(actions.saveEntityActions.success): {\n      return {\n        ...state,\n        processing: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { initialState, ISpreadsheetIdState } from './initialState';\nimport * as actions from '../actions';\n\nexport type Actions = ActionType<typeof actions.spreadhsheetChanged>;\n\nexport default (state: ISpreadsheetIdState = initialState.spreadsheetId, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.spreadhsheetChanged): {\n      return {\n        ...state,\n        value: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import createHistory from 'history/createBrowserHistory';\nimport { History } from 'history';\nimport { createStore, applyMiddleware, } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\n\n\nimport rootReducer from './reducers';\n\nexport const history = createHistory({\n  basename: process.env.PUBLIC_URL,\n});\n\nexport interface IProps {\n  preloadedState: any;\n  history: History;\n}\n\nconst configureStore = ({preloadedState, history}: IProps) => {\n  const persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: [\n      'auth',\n      'authClientLoad',\n      'authClientInit',\n    ]\n  }\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer(history))\n\n  const middlewares = [\n    routerMiddleware(history),\n    thunk,\n  ];\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [\n    middlewareEnhancer,\n  ];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(\n    persistedReducer,\n    preloadedState,\n    composedEnhancers\n  );\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import { combineReducers, } from 'redux';\nimport { connectRouter, RouterAction } from 'connected-react-router';\nimport auth, {Actions as AuthActions} from './auth';\nimport authClientLoad, {Actions as AuthClientLoadActions} from './authClientLoad';\nimport authClientInit, {Actions as AuthClientInitActions} from './authClientInit';\nimport data, {Actions as DataActions} from './data';\nimport spreadsheetId, {Actions as SpreadhsheetIdhActions} from './spreadsheetId';\nimport { History } from 'history';\nimport { IRootState } from './initialState';\n\nexport type RootActions = AuthActions|SpreadhsheetIdhActions|AuthClientLoadActions|AuthClientInitActions|DataActions|RouterAction;\n\nexport default (history: History) => combineReducers<IRootState>({\n  auth,\n  authClientLoad,\n  authClientInit,\n  data,\n  spreadsheetId,\n  router: connectRouter(history),\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport './index.css';\n\nimport Root from './components/Root';\nimport configureStore, {history} from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst preloadedState = {};\n\nrender(\n  <Root\n    store={configureStore({preloadedState, history})}\n    history={history}\n  />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}